/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'tbench.scala-application-conventions'
}

dependencies {
    compileOnly 'org.apache.spark:spark-core_2.12:3.3.2'
    compileOnly 'org.apache.spark:spark-catalyst_2.12:3.3.2'
    compileOnly 'org.apache.spark:spark-sql_2.12:3.3.2'
    compileOnly 'org.apache.iceberg:iceberg-spark-runtime-3.3_2.12:1.3.0-1-tq'
    compileOnly 'org.apache.hudi:hudi-spark3.1-bundle_2.12:0.11.1-1-tencent'
    compileOnly 'org.apache.hive:hive-metastore:2.3.7'
    implementation 'io.trino.tpcds:tpcds:1.5-TENCENT-5-SNAPSHOT'
    implementation 'org.apache.commons:commons-text'
    implementation 'mysql:mysql-connector-java:5.1.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'com.tencent.tarthas:shadow-tarthas:2.1-SNAPSHOT'
    implementation 'io.netty:netty-all:4.0.23.Final'
    implementation project(':infra')

    testImplementation 'org.scalatest:scalatest_2.12:3.1.2'
    testImplementation 'org.scalatestplus:mockito-3-4_2.12:3.2.10.0'
    testImplementation 'org.apache.spark:spark-core_2.12:3.3.2'
    testImplementation 'org.apache.spark:spark-catalyst_2.12:3.3.2'
    testImplementation 'org.apache.spark:spark-sql_2.12:3.3.2'
}

application {
    // Define the main class for the application.
    mainClass = 'scripts.aometric.GenerateDTS'
}

shadowJar {
    archiveBaseName.set('shadow-tbench-spark33')
    archiveClassifier.set('')
    archiveVersion.set('')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://mirrors.tencent.com/repository/maven/tianqiong-releases" }
    maven { url "https://mirrors.tencent.com/repository/maven/tencent_public" }
    maven { url "https://mirrors.tencent.com/repository/maven/tencent_public_snapshots" }
}
